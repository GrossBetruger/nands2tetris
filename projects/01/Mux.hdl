// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/** 
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
    Not(in=sel, out=notsel);
    Not(in=a, out=nota);
    Not(in=b, out=notb);

// return 1
    And(a=b, b=sel, out=bAndsel);
    And(a=a, b=notsel, out=aAndNotsel);

// return 0
//    And(a=notb, b=sel, out=notbAndsel);
//    And(a=nota, b=notsel, out=notaAndNotsel);


// return a
    And(a=notb, b=notsel, out=notbAndNotsel);
// return b
    And(a=nota, b=sel, out=notaAndsel);

// return 1
    And(a=notbAndNotsel, b=a, out=notbAndNotselAnda);
    And(a=notaAndsel, b=b, out=notbAndNotselAndb);

// return 0 
//    And(a=notbAndNotsel, b=nota, out=notbAndNotselAndnota);
//    And(a=notaAndsel, b=notb, out=notaAndselAndnotb);

    Or(a=bAndsel, b=aAndNotsel, out=returnOneTempOne);
    Or(a=notbAndNotselAnda, b=notbAndNotselAndb, out=returnOneTempTwo);
    Or(a=returnOneTempOne, b=returnOneTempTwo, out=returnOne);

    Or(a=returnOne, b=false, out=out);


}