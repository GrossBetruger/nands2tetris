// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    And(a=sel[0], b=sel[1], out=selThree);
    Or(a=sel[0], b=sel[1], out=selNotZero);
    Not(in=selNotZero, out=selZero);
    Xor(a=sel[0], b=sel[1], out=selOneOrThree);
    And(a=selOneOrThree, b=sel[0], out=selOne);
    And(a=selOneOrThree, b=sel[1], out=selTwo);

    Const16(const=selZero, out=selZero16);
    And16(a=a, b=selZero16, out=busa);

    Const16(const=selOne, out=selOne16);
    And16(a=b, b=selOne16, out=busb);

    Const16(const=selTwo, out=selTwo16);
    And16(a=c, b=selTwo16, out=busc);

    Const16(const=selThree, out=selThree16);
    And16(a=d, b=selThree16, out=busd);

    Or16(a=busa, b=busb, out=busaOrbusb);
    Or16(a=busc, b=busd, out=buscOrbusd);

    Or16(a=busaOrbusb, b=buscOrbusd, out=out);


}